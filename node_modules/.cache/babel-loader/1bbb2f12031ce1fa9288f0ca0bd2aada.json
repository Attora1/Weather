{"ast":null,"code":"var _jsxFileName = \"/home/nessa/Desktop/weather-app/src/components/Test.js\";\nimport React, { useState } from 'react';\nimport Form from './Form2';\nimport Weather from './WeatherforFive';\n\nfunction Week() {\n  const [weather, setWeather] = useState([]);\n  const APIKEY = '9e589ccb0b9bf125c2f2a918fd3d5fca';\n  let list = [];\n\n  function fetchData(e) {\n    const city = e.target.elements.city.value;\n    e.preventDefault();\n    const apiData = fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${APIKEY}`).then(res => res.json()).then(data => data).then(apidata => {\n      list = apidata.list;\n\n      if (city) {\n        setWeather({\n          data: apidata,\n          city: apidata.city,\n          description: apidata.weather[0].description,\n          temperature: kToF(apidata.main.temp),\n          error: \"\"\n        });\n        console.log(setWeather);\n      } else {\n        setWeather({\n          data: '',\n          city: '',\n          description: '',\n          temperature: '',\n          error: \"Please Input City\"\n        });\n      }\n    });\n  }\n\n  console.log(list);\n  const week = [];\n  list.forEach(day => {\n    console.log(\"test\"); //grab current date object\n\n    const time = day.dt;\n    const currentDate = new Date(time); //checking date object for the hours\n\n    if (currentDate.getHours === 3) {\n      //if it is push to the week array\n      week.push(day);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \" Hello\"), /*#__PURE__*/React.createElement(Form, {\n    getWeather: fetchData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Weather, {\n    city: weather.city,\n    description: weather.description,\n    temperature: weather.temperature,\n    error: weather.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), console.log(weather.data));\n\n  function kToF(kelvin) {\n    console.log(kelvin);\n    const temp_f = kelvin * 9 / 5 - 459.67;\n    return +temp_f.toFixed(2);\n  }\n}\n\nexport default Week;","map":{"version":3,"sources":["/home/nessa/Desktop/weather-app/src/components/Test.js"],"names":["React","useState","Form","Weather","Week","weather","setWeather","APIKEY","list","fetchData","e","city","target","elements","value","preventDefault","apiData","fetch","then","res","json","data","apidata","description","temperature","kToF","main","temp","error","console","log","week","forEach","day","time","dt","currentDate","Date","getHours","push","kelvin","temp_f","toFixed"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport Form from './Form2';\nimport Weather from './WeatherforFive';\n\nfunction Week(){\n    const [weather,setWeather] = useState([])\n    const APIKEY = '9e589ccb0b9bf125c2f2a918fd3d5fca'\n    let list = []\n    function fetchData(e) {\n        const city = e.target.elements.city.value\n          e.preventDefault()\n        const apiData =  fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${APIKEY}`)\n          .then( res => res.json())\n          .then(data => data) \n          .then((apidata)=>{\n            list = apidata.list\n            if(city) {\n                setWeather({\n                  data: apidata,\n                  city: apidata.city,\n                  description: apidata.weather[0].description,\n                  temperature: kToF(apidata.main.temp),\n                  error:\"\",\n                })\n                console.log(setWeather)\n              }\n              else{\n                setWeather({\n                  data: '',\n                  city: '',\n                  description: '',\n                  temperature: '',\n                  error: \"Please Input City\"\n                })\n              }\n            \n        })  \n         \n       \n          \n   }\n   console.log(list)\n   const week = []\n\n   list.forEach((day)=> {\n    console.log(\"test\")\n       //grab current date object\n        const time = day.dt\n        const currentDate = new Date(time)\n        //checking date object for the hours\n        if(currentDate.getHours === 3){\n            //if it is push to the week array\n            week.push(day)\n\n        }\n   });\n\n\n\n    return(\n        <div>\n            <h1> Hello</h1>\n                <Form getWeather={fetchData} />\n                    <Weather\n                        city={weather.city}\n                        description={weather.description}\n                        temperature={weather.temperature}\n                        error={weather.error}\n                    /> \n            {console.log(weather.data)}\n        </div>\n    );\n  \n    function kToF(kelvin){ \n      console.log(kelvin)\n      const temp_f = kelvin * 9/5 - 459.67\n      return +temp_f.toFixed(2)\n    }\n    \n    \n}\nexport default Week;"]},"metadata":{},"sourceType":"module"}